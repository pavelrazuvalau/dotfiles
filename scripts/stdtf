#!/bin/bash
#
# Renames files and folders within a directory to only have lowercase letters
# and underscores in their file names.
#
# Author: clyde80
# Website: https://github.com/clyde80
# Created on: November 27, 2016
# Updated on: December 22, 2016
#
print_help() {
    echo "Usage: stdtf [options] folder"
    echo
    echo "Options"
    echo
    echo "  -f      --folders   Rename folders in the specified folder"
    echo "  -g      --files     Rename files in the specified folder"
    echo "  -d      --dry-run   Do not change anything, just print output"
    echo
    echo "Type 'stdtf -h' to display this help message"
    echo
    echo "Author: clyde80"
    echo "Website: https://github.com/clyde80"
    echo "Created on: November 27, 2016"
    echo "Updated on: December 22, 2016"
}

if [ $# -eq 0 ]; then
    print_help
    exit 0;
fi

# Handle spaces in file names.
IFS=$'\n'

rename_files=false      # Whether or not to rename files.
rename_folders=false    # Whether or not to rename folders.
dry_run=false           # Whether to rename anything or only print output.
folder=''               # The folder containing the files and folders to be renamed.

# Parse the command arguments.
while [ $# -ne 0 ]; do
    case $1 in
        "-f"|"--folders")
            if [ "$rename_folders" = true ]; then
                echo "Duplicate option: $1"
                exit 1
            fi
            rename_folders=true; shift;;
        "-g"|"--files")
            if [ "$rename_files" = true ]; then
                echo "Duplicate option: $1"
                exit 1
            fi
            rename_files=true; shift;;
        "-d"|"--dry-run")
            if [ "$dry_run" = true ]; then
                echo "Duplicate option: $1"
                exit 1
            fi
            dry_run=true; shift;;
        "-h"|"--help")
            print_help
            exit 0;;
        *)
            if [ ! -z "$folder" ]; then
                echo "Invalid option: $1"
                exit 1
            fi
            folder=$1; shift;;
    esac
done

if [ -z "$folder" ]; then
    echo "Error: No folder specified"
    exit 1
fi

# Renames folders in a directory.
rename_folders() {
    for f in $(find $folder/* -maxdepth 1 -type d); do
        mv -v $f "$(dirname $f)/$(echo $(basename $f) | tr 'A-Z ' 'a-z_')"
    done
}

# Renames files in a directory.
rename_files() {
    for f in $(find $folder -maxdepth 1 -type f); do
        mv -v $f "$(dirname $f)/$(echo $(basename $f) | tr 'A-Z ' 'a-z_')"
    done
}

# Print out the changed folder names but do not change anything.
rename_folders_dry_run() {
    for f in $(find $folder/* -maxdepth 1 -type d); do
        echo $(basename $f) | tr 'A-Z ' 'a-z_'
    done
}

# Print out the changed file names but do not change anything.
rename_files_dry_run() {
    for f in $(find $folder -maxdepth 1 -type f); do
        echo $(basename $f) | tr 'A-Z ' 'a-z_'
    done
}

# Rename files, folders, or do a dry run.
if [ "$dry_run" = true ]; then
    if [ "$rename_folders" = true ]; then
        rename_folders_dry_run $folder
    fi
    if [ "$rename_files" = true ]; then
        rename_files_dry_run $folder
    fi
    exit 0
fi
if [ "$rename_folders" = true ]; then
    rename_folders $folder
fi
if [ "$rename_files" = true ]; then
    rename_files $folder
fi
exit 0
